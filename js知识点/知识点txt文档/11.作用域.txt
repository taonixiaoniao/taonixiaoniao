1、作用域概述：
	一段程序代码中的名字并不总是有效和可用的，限定这个名字的可用性代码范围就是这个名字的作用域。作用域的使用提高
	了程序的局部性，增强了程序的可靠性，减少了名字的冲突。
	就是代码名字在某个范围内其作用和效果。
2、作用域分为两种：
	全局作用域：整个script标签 或者是一个单独的js文件
	局部作用域：在函数内部就是局部作用域，这个代码的名字只在函数内部其效果和作用
3、变量的作用域：
	在JS中，根据作用域的不同，变量可以分为两种：
		全局变量：在全局作用域下的变量；在函数内部没有声明直接赋值的变量也属于全局变量。全局变量在代码的	
			任何位置都可以使用。
		局部变量：在函数内部的变量；函数的形参也可以看做是局部变量。局部变量只能在函数内部使用
	从执行效率来看全局变量和局部变量：
		全局变量：只有在浏览器关闭的时候才会销毁，比较占内存资源
		局部变量：当我们程序执行完毕的时候就会销毁，比较节约内存资源
4、作用域链：
	只要是代码，就至少有一个作用域；
	写在函数内部的局部作用域；
	如果在函数里面还有函数，那么在这个作用域中又可以诞生一个新的作用域；
	根据在内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能被内部函数访问，就称为作用域链。
	（就近原则）
	
	