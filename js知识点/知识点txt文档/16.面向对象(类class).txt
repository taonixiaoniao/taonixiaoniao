1、面向过程(POP)：分析出解决问题所需要的步骤，然后用函数把这些步骤一一实现，使用的时候再一个一个的依次调用就行了。
2、面向对象(OOP)：把事务分解成一个个对象，然后由对象之间分工合作。
	面向对象的特性：封装性、继承性、多态性
3、对比：
	面向过程
	优点：性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用的面向过程编程。
	缺点：没有面向对象易维护、易复用、易扩展。
	面向对象
	优点：易维护、易复用、易扩展，由于面向对象有封装、继承、多态的特性，可以设计出低耦合的系统，使系统更加灵活、
	更加易于维护。
	缺点：性能不如面向过程。
4、面向对象思维特点：
	（1）：抽取对象共用的属性和行为组织（封装）成一个类（模板）
	（2）：对类进行实例化。获取类的对象
5、es6中新增了类的概念，可以使用class关键字声明一个类，之后以这个类来实例化对象。
	类抽取了对象得公共部分，泛指某一大类（class）；对象特指某一个通过类实例化的具体对象。
6、创建类
	语法：class name {
		  
		}
	创建实例：new xx = new name();
7、类constructor构造函数
	constructor()方法是类的构造函数（默认方法），用于传递参数，通过new命令生成对象实例时自动调用该方法。如果
	没有显示定义，类内部会自动给我们创建一个constructor()。
8、类中添加方法：
	直接写在类中，不需要function关键字,多个函数方法之间不能添加逗号分隔。
	class Star {
		sing(){}
		}
9、类的继承：
	使用extends关键字
	class Father{}  //父类
	class Son extends Father{} //子类继承父类
10、super关键字：
	super关键字用于访问和调用对象父类上的函数。可以调用父类的构造函数，也可以调用父类的普通函数。
	继承中，如果实例化子类输出一个方法，先看子类有没有这个方法，如果有就先执行子类的。
	继承中，如果子类没有，就去找父类有没有这个方法，如果有，就执行父类的这个方法（就近原则）。
	子类可以继承父类的方法，同时可以扩展自己的一些方法，但是继承时super必须在子类this之前调用。
11、类和对象使用注意事项
	（1）es6中没有变量提升，所以必须先定义类，才能通过实例化对象。
	（2）类里面的共有属性和方法一定要加this使用。
12、class的静态属性 
	static关键字可以给class类定义静态属性